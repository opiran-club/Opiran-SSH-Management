#!/bin/bash
clear
source ShellBot.sh
touch list

[[ ! -e RESET ]] && touch RESET
api_bot=$1
ShellBot.init --token "$api_bot" --monitor --flush
ShellBot.username

# - Function menu
menu() {
    local msg
        msg="◇──────────────────◇\n"
        msg+="<b>•🔹• HELLO WELCOME •🔹•</b>\n"
        msg+="◇──────────────────◇\n\n"
        msg+="ssh account R$ 10/Month"
        ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
        --text "$(echo -e $msg)" \
        --reply_markup "$keyboard1" \
        --parse_mode html
        return 0
}

# - create function ssh
criarTEST() {
    [[ $(grep -wc ${callback_query_from_id} list) != '0' ]] && {
      ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
        --text "YOU HAVE ALREADY CREATED YOUR TEST!"
      return 0
    }
    user=$(echo TEST$(( RANDOM% + 250 )))
    password=$((RANDOM% + 99999))
    limit='1'
    tempo='1'
    tuserdate=$(date '+%C%y/%m/%d' -d " +1 days")
    useradd -M -N -s /bin/false $user -e $tuserdate > /dev/null 2>&1
    (echo "$password";echo "$password") | passwd $user > /dev/null 2>&1
    echo "$password" > /etc/opiran/password/$user
    echo "$user $limit" >> /root/users.db
    echo "#!/bin/bash
pkill -f "$user"
userdel --force $user
grep -v ^$user[[:space:]] /root/users.db > /tmp/ph ; cat /tmp/ph > /root/users.db
rm /etc/opiran/password/$user > /dev/null 2>&1
rm -rf /etc/opiran/userTEST/$user.sh" > /etc/opiran/userTEST/$user.sh
    chmod +x /etc/opiran/userTEST/$user.sh
    at -f /etc/opiran/userTEST/$user.sh now + $tempo hour > /dev/null 2>&1
    echo ${callback_query_from_id} >> list
    # - SEND THE SSH
    ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
    --text "$(echo -e "✅ <b>successfully created</b> ✅\n\nSERVER: $(cat /etc/IP) \n\nUSER: <code>$user</code>\nPASSWORD: <code>$password</code>\n\n⏳ Expires in: $tempo Hour")" \
    --parse_mode html
    return 0
}

#informacoes user
infouser () {
	ShellBot.sendMessage --chat_id ${message_chat_id[$id]} \
	--text "$(echo -e "Nome:  ${message_from_first_name[$(ShellBot.ListUpdates)]}\nUser: @${message_from_username[$(ShellBot.ListUpdates)]:-null}")\nID: ${message_from_id[$(ShellBot.ListUpdates)]} " \
	--parse_mode html
	return 0
}

#informacoes user
pix () {
	 ShellBot.sendMessage --chat_id ${callback_query_message_chat_id} \
	--text "$(echo -e "<b>ssh account R$ 10/Month \n\nCOPY THE RANDOM PIX KEY</b>\n <code>b54bc1c3-c892-4b3a-a7ac-73a46f9eefa3</code>")" \
	--parse_mode html
	return 0
}

unset button1
button1=''
ShellBot.InlineKeyboardButton --button 'button1' --line 1 --text 'CREATE TEST' --callback_data 'generatessh'
ShellBot.InlineKeyboardButton --button 'button1' --line 2 --text 'TELEGRAM CONTACT' --callback_data '2' --url 'https://https://t.me/opiranv2rayproxy' 
ShellBot.InlineKeyboardButton --button 'button1' --line 3 --text 'TELEGRAM CONTACT' --callback_data '3' --url 'https://https://t.me/opiranv2rayproxy' 
ShellBot.InlineKeyboardButton --button 'button1' --line 4 --text 'TELEGRAM CONTACT' --callback_data 'pay'
ShellBot.InlineKeyboardButton --button 'button1' --line 4 --text 'TELEGRAM CONTACT' --callback_data '4' --url 'https://https://t.me/opiranv2rayproxy' 
ShellBot.regHandleFunction --function criarTEST --callback_data generatessh
ShellBot.regHandleFunction --function pix --callback_data pay

unset keyboard1
keyboard1="$(ShellBot.InlineKeyboardMarkup -b 'button1')"
while :; do
   [[ "$(date +%d +5days)" != "$(cat RESET)" ]] && {
   	echo $(date +%d +5days) > RESET
   	echo ' ' > list
   }
  ShellBot.getUpdates --limit 100 --offset $(ShellBot.OffsetNext) --timeout 30
  for id in $(ShellBot.ListUpdates); do
    (
      ShellBot.watchHandle --callback_data ${callback_query_data[$id]}
      command=(${message_text[$id]})
      [[ "${command[0]}" = "/menu"  || "${command[0]}" = "/start" ]] && menu
      [[ "${command[0]}" = "/id"  ]] && infouser
    ) &
  done
done
